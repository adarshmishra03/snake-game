{"version":3,"sources":["SnakeDot.js","Food.js","App.js","reportWebVitals.js","index.js"],"names":["SnakeDot","props","element","dots","map","dot","i","style","left","top","className","Food","getPosition","Math","floor","random","App","onKeyDown","e","window","event","keyCode","setState","direction","movement","state","snakeDots","head","length","shift","push","checkCollapse","gameOver","pop","forEach","alert","food","speed","checkEatFood","enlargeSnake","unshift","setInterval","this","document","onkeydown","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.162c18dc.chunk.js","sourcesContent":["\r\nfunction SnakeDot (props){\r\n  let element = props.dots.map((dot,i) => {\r\n    const style = {\r\n      left: `${dot[0]}%`,\r\n      top: `${dot[1]}%`\r\n    }\r\n    return (\r\n      <div className=\"snake-dot\" key={i} style={style}></div>\r\n    )\r\n  });\r\n  return (\r\n    <div>\r\n      {element}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SnakeDot;\r\n","\r\nfunction Food(props) {\r\n  const style = {\r\n    left: `${props.dot[0]}%`,\r\n    top: `${props.dot[1]}%`\r\n  }\r\n  return (\r\n  <div className=\"snake-food\" style={style}></div>\r\n  );  \r\n}\r\n\r\nexport default Food;\r\n","import React from 'react';\nimport SnakeDot from './SnakeDot';\nimport Food from './Food';\n\nconst getPosition = ()=> {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  return [x,y]\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      snakeDots:[\n        [0,0],\n        [2,0]\n      ],\n      food:getPosition(),\n      direction:'RIGHT',\n      speed:300\n    }\n  }\n\n  componentDidMount() {\n    setInterval(this.movement, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkCollapse();\n    this.checkEatFood();\n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      case 37:\n        this.setState({direction: 'LEFT'});\n        break;\n      case 39:\n        this.setState({direction: 'RIGHT'});\n        break;\n    }\n  }\n\n  movement = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length-1];\n\n    switch (this.state.direction) {\n      case 'UP':\n        head=[head[0],head[1]-2];\n        break;\n      case 'DOWN':\n        head=[head[0],head[1]+2];\n        break;\n      case 'LEFT':\n        head=[head[0]-2,head[1]];\n        break;\n      case 'RIGHT':\n        head=[head[0]+2,head[1]];\n        break;\n    }\n    dots.shift();\n    dots.push(head);\n    this.setState({\n      snakeDots:dots\n    })\n  }\n\n  checkCollapse = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length-1];\n    if(head[0]<0 || head[1]<0 || head[0]>=100 || head[1]>=100){\n      this.gameOver();\n    }\n\n    dots.pop();\n    dots.forEach((dot) => {\n      if(head[0]===dot[0] && head[1]===dot[1]){\n        this.gameOver();\n      }\n    });\n  }\n\n  gameOver = () => {\n    alert(`Game over. Snake length is ${this.state.snakeDots.length}`)\n    this.setState({\n      snakeDots:[\n        [0,0],\n        [2,0]\n      ],\n      food:getPosition(),\n      direction:'RIGHT',\n      speed:300\n    })\n  }\n\n  checkEatFood = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length-1];\n    let food = this.state.food;\n    if(head[0] === food[0] && head[1] === food[1] ){\n      this.setState({\n        food:getPosition(),\n      });\n      this.enlargeSnake();\n    }\n  }\n  \n  enlargeSnake = () => {\n    let dots = [...this.state.snakeDots];\n    dots.unshift([]);\n    this.setState({\n      snakeDots:dots\n    })\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      })\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"game\">\n        <SnakeDot dots={this.state.snakeDots} />\n        <Food dot={this.state.food} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}